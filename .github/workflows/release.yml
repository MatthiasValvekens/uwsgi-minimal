name: Publish release
on:
  push:
    tags: ["v*"]
    branches: [ master ]
  workflow_dispatch: {}
jobs:
  generate-metadata:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.docker-meta.outputs.tags }}
      labels: ${{ steps.docker-meta.outputs.labels }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: docker-meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: |
            name=mfjval/uwsgi-minimal,enable=${{ startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master' }}
            name=ghcr.io/MatthiasValvekens/uwsgi-minimal
          flavor: |
            latest=auto
            suffix=-py${{ matrix.python-version }},onlatest=${{ matrix.python-version != '3.11' }}
          tags: |
            type=ref,event=branch,enable=${{ !startsWith(github.ref, 'refs/tags/v') && github.ref != 'refs/heads/master' }}
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}},event=tag
            type=semver,pattern={{major}}.{{minor}},event=tag
            type=raw,value=unstable,enable=${{ github.ref == 'refs/heads/master' }},priority=400
            type=match,pattern=v(.*),value=latest,priority=900
            type=match,pattern=v(.*),value=latest,enable=${{ matrix.python-version == '3.11' }},suffix=,priority=1000
  publish-images:
    runs-on: ubuntu-latest
    environment: release
    needs: [generate-metadata]
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.0.3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v4
        with:
          context: src
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ needs.generate-metadata.outputs.tags }}
          labels: ${{ needs.generate-metadata.outputs.labels }}
      - name: Generate cosign arguments
        id: cosign-args
        # TODO make this more DRY
        run: |
          if [[ $GITHUB_REF_TYPE == 'tag' ]]; then
            images_arr = (ghcr.io/MatthiasValvekens/uwsgi-minimal mfjval/uwsgi-minimal)
          else
            images_arr = (ghcr.io/MatthiasValvekens/uwsgi-minimal)
          fi
          images_arr = ($IMAGES)
          images_suffixed = "${images_arr[@]/%/@$DIGEST}"
          echo "to-sign=$images_suffixed" >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"
        env:
          # this digest is for the manifest that combines all the platform images
          DIGEST: ${{ steps.build-push.outputs.digest }}
      - name: Sign images using GHA OIDC identity
        run: cosign sign --yes ${{ steps.cosign-args.outputs.to-sign }}
